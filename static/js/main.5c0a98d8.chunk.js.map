{"version":3,"sources":["stores/actions/movies.js","components/SearchBar/SearchBar-jss.js","components/SearchBar/index.js","components/MovieCard/MovieCard-jss.js","components/MovieCard/index.js","components/LightBox/LightBox-jss.js","components/LightBox/index.js","containers/movies/MoviesPage.js","api/movies.js","containers/movies/style-jss.js","containers/movies/MovieDetailPage.js","App.js","serviceWorker.js","utils/history.js","stores/selectors.js","stores/sagas/modules/movies.js","stores/rootSagas.js","stores/reducers/modules/movies.js","stores/rootReducers.js","stores/index.js","index.js"],"names":["Types","getMoviesSuccess","movies","type","payload","styles","theme","grow","flexGrow","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","helperText","fontSize","fontWeight","bottom","opacity","letterSpacing","marginTop","progress","top","right","clearIcon","SearchBar","props","classes","onSubmit","minimumLength","loading","placeholder","value","useState","error","length","searchBarState","setSearchBarState","className","root","AppBar","Toolbar","Container","maxWidth","Search","InputBase","autoFocus","input","inputProps","disabled","onChange","e","target","onKeyDown","keyCode","handleKeyPress","IconButton","aria-label","size","onClick","Clear","CircularProgress","FormHelperText","defaultProps","withStyles","minHeight","media","paddingTop","expand","transform","duration","shortest","expandOpen","MovieCard","poster","title","year","imdbId","fullPoster","lightbox","openLightbox","setOpenLightbox","MovieImageCard","CardMedia","image","style","Card","CardActionArea","source","showDialog","onClose","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","Link","to","margin","closeButton","background","dialogContent","border","dialogContentImage","handleClose","Dialog","aria-labelledby","open","DialogContent","dividers","src","alt","Close","connect","state","ownProps","getMoviesRequest","keyword","setKeyword","Paper","elevation","square","params","fetchingMovies","LinearProgress","data","Grid","container","map","movie","item","xs","sm","key","imdbID","Poster","Title","Type","Year","Box","css","align","MoviesApi","instance","axios","baseURL","timeout","headers","getMovies","page","endpoint","get","then","response","responseBody","catch","getMovieDetail","id","paperRoot","menuButton","movieDetailPaper","movieDetailCard","details","flexDirection","content","flex","cover","columnPaper","boxShadow","moviesApi","MovieDetailPage","movieId","match","fetchingMovie","movieData","movieDetailState","setMovieDetailState","fetchMovieDetail","useCallback","a","useEffect","edge","ArrowBackIos","Divider","Rating","name","defaultValue","parseInt","imdbRating","precision","readOnly","imdbVotes","Metascore","Country","Runtime","Genre","Released","Plot","List","dense","ListItem","disableGutters","ListItemText","primary","secondary","Director","Writer","Actors","App","path","exact","MoviesPage","Boolean","window","location","hostname","createBrowserHistory","getKeyword","fetchMovies","watchFetchMovies","select","call","put","actions","Error","takeEvery","MoviesSagas","fork","rootSaga","all","INITIAL_STATE","combineReducers","action","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","store","createStore","rootReducers","run","rootSagas","ReactDOM","render","history","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5c0a98d8.chunk.js","sourcesContent":["export const Types = {\n  GET_MOVIES_REQUEST: \"get_movies_request\",\n  GET_MOVIES_SUCCESS: \"get_movies_success\",\n  GET_MOVIES_FAILED: \"get_movies_failed\",\n};\n\nexport const getMoviesRequest = keyword => ({\n  type: Types.GET_MOVIES_REQUEST,\n  payload: {\n    keyword\n  }\n});\nexport const getMoviesSuccess = ({ movies }) => ({\n  type: Types.GET_MOVIES_SUCCESS,\n  payload: {\n    movies,\n  },\n});\n\nexport const getMoviesFailed = (error) => ({\n  type: Types.GET_MOVIES_FAILED,\n  payload: { \n    error,\n   },\n});\n","import { fade } from \"@material-ui/core/styles\";\nconst styles = (theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n  helperText: {\n    fontSize: \"8px\",\n    fontWeight: \"100\",\n    color: \"white\",\n    position: \"absolute\",\n    bottom: -14,\n    opacity: 0.7,\n    letterSpacing: \".75px\",\n    marginTop: 0,\n  },\n  progress: {\n    position: \"absolute\",\n    top: 2,\n    right: 2,\n    opacity: 0.7,\n  },\n  clearIcon: {\n    position: \"absolute\",\n    top: 2,\n    right: 2,\n  },\n});\n\nexport default styles;\n","import React, { useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Container,\n  Toolbar,\n  InputBase,\n  FormHelperText,\n  CircularProgress,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Search, Clear } from \"@material-ui/icons\";\nimport styles from \"./SearchBar-jss\";\n\nconst SearchBar = (props) => {\n  const { classes, onSubmit, minimumLength, loading, placeholder, value } = props;\n  const [searchBarState, setSearchBarState] = useState({\n    error: value.length < minimumLength,\n    value: value,\n  });\n\n  function handleKeyPress(e, onSubmit) {\n    const value = e.target.value;\n    const error = value.length < minimumLength;\n\n    if (e.keyCode === 13 && value.length >= minimumLength) onSubmit(value);\n\n    setSearchBarState({ value, error });\n  }\n\n  function handleInputChange(e) {\n    const value = e.target.value;\n    const error = value.length < minimumLength;\n    setSearchBarState({ value, error });\n  }\n\n  function handleClear() {\n    onSubmit(\"\");\n    setSearchBarState({ value: \"\" });\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Container maxWidth=\"sm\">\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <Search />\n              </div>\n              <InputBase\n                placeholder={placeholder}\n                autoFocus\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{\n                  \"aria-label\": \"search\",\n                  disabled: loading,\n                }}\n                value={searchBarState.value}\n                onChange={handleInputChange}\n                onKeyDown={(e) => handleKeyPress(e, onSubmit)}\n              />\n              {searchBarState.value.length >= minimumLength ? (\n                <IconButton\n                  aria-label=\"clear\"\n                  size=\"small\"\n                  className={classes.clearIcon}\n                  color=\"inherit\"\n                  onClick={handleClear}\n                >\n                  <Clear />\n                </IconButton>\n              ) : (\n                \"\"\n              )}\n              {loading && (\n                <CircularProgress\n                  className={classes.progress}\n                  size={30}\n                  color=\"inherit\"\n                />\n              )}\n              {minimumLength && searchBarState.error && (\n                <FormHelperText className={classes.helperText}>\n                  Minimum {minimumLength} character(s)\n                </FormHelperText>\n              )}\n            </div>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  classes: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  minimumLength: PropTypes.number,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n};\n\nSearchBar.defaultProps = {\n  loading: false,\n  minimumLength: 1,\n  placeholder: \"Search here...\",\n  value: ''\n};\n\nexport default withStyles(styles)(SearchBar);\n","const styles = (theme) => ({\n  root: {\n    minHeight: 400,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n});\n\nexport default styles;\n","import React, { useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\"\nimport {\n  Typography,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Button,\n} from \"@material-ui/core\";\nimport { LightBox } from \"../index\";\n\nimport styles from \"./MovieCard-jss\";\n\nconst MovieCard = (props) => {\n  const { \n    poster,\n    title,\n    type,\n    year,\n    imdbId,\n    classes,\n    fullPoster,\n    lightbox\n  } = props;\n  \n  const [openLightbox, setOpenLightbox] = useState(false);\n  \n  const MovieImageCard = () => {\n    return <CardMedia image={poster} title={title} style={{ minHeight: 300 }} />\n  }\n\n  return (\n    <Card className={classes.root}>\n      {lightbox ? (\n        <>\n          <CardActionArea\n            onClick={() => setOpenLightbox(true)}\n          >\n            <MovieImageCard />\n          </CardActionArea>\n          <LightBox\n              source={fullPoster ? fullPoster : poster}\n              showDialog={openLightbox}\n              onClose={() => setOpenLightbox(false)}\n            />\n          </>\n      ) : (\n        <MovieImageCard />\n      )}\n\n      <CardContent>\n        <Typography color=\"textSecondary\">{type}</Typography>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography color=\"textSecondary\">{year}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          component={Link}\n          to={`/movies/${imdbId}`}\n        >\n          Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nMovieCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  lightbox: PropTypes.bool,\n  poster: PropTypes.string.isRequired,\n  fullPoster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  imdbId: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  lightbox: false,\n  fullPoster: null,\n};\n\n\nexport default withStyles(styles)(MovieCard);\n","const styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: 'white',\n    background: \"rgba(0,0,0,.9)\",\n  },\n  dialogContent: {\n    padding: \"0 !important\",\n    border: 0,\n  },\n  dialogContentImage: {\n    display: \"block\",\n    width: \"100%\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Dialog,\n  DialogContent,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\n\nimport styles from \"./LightBox-jss\";\n\nconst LightBox = (props) => {\n  const { source, classes, showDialog, onClose } = props;\n  const handleClose = () => {\n    onClose()\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={showDialog}\n    >\n      <DialogContent dividers className={classes.dialogContent}>\n        <img src={source} className={classes.dialogContentImage} alt=\"\" />\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <Close />\n        </IconButton>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nLightBox.propTypes = {\n  source: PropTypes.string.isRequired,\n  showDialog: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(LightBox);\n","import React, { useState } from \"react\";\nimport { getMoviesRequest } from \"../../stores/actions/movies\";\nimport {\n  Box,\n  Container,\n  LinearProgress,\n  Paper,\n  Typography,\n  Grid,\n} from '@material-ui/core';\nimport { SearchBar, MovieCard } from \"../../components\"\n\nimport { connect } from \"react-redux\";\n\nfunction MoviesPage(props) {\n  const [keyword, setKeyword] = useState(props.movies.keyword)\n\n  const fetchMovies = (params) => {\n    props.getMoviesRequest(params);\n  };\n  \n  function handleSearchMovie( value ) {\n    setKeyword(value);\n    fetchMovies(value);\n  }\n\n  return (\n    <Container>\n      <Paper elevation={0} square>\n        <div style={{ paddingTop: 74 }}>\n          <SearchBar\n            onSubmit={handleSearchMovie}\n            minimumLength={3}\n            placeholder=\"Search movies…\"\n            loading={props.movies.fetchingMovies}\n            value={keyword}\n          />\n          {props.movies.fetchingMovies ? (\n            <LinearProgress />\n          ) : props.movies.data ? (\n            <Grid container spacing={3} style={{ marginTop: 0 }}>\n              {props.movies.data &&\n                props.movies.data.map((movie) => {\n                  return (\n                    <Grid item xs={12} sm={4} key={movie.imdbID}>\n                      <MovieCard\n                        poster={movie.Poster}\n                        title={movie.Title}\n                        type={movie.Type}\n                        year={movie.Year}\n                        imdbId={movie.imdbID}\n                        lightbox\n                      />\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          ) : (\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              css={{ height: 300 }}\n            >\n              <Box>\n                <Typography variant=\"h3\" align=\"center\" color=\"textSecondary\">\n                  No Movies Found\n                </Typography>\n              </Box>\n            </Box>\n          )}\n        </div>\n      </Paper>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    movies: state.movies,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMoviesRequest,\n  }\n)(MoviesPage);","import axios from \"axios\";\n\nconst MoviesApi = () => {\n  const instance = axios.create({\n    baseURL: \"http://www.omdbapi.com\",\n    timeout: 30000,\n    headers: {},\n  });\n\n  const getMovies = ({ params= '', page = 1}) => {\n    let endpoint = `&page=${page}`;\n    endpoint = params.length ? `&s=${params}` : endpoint;\n    return instance\n      .get(`?apikey=faf7e5bb${endpoint}`)\n      .then((response) => response.data)\n      .then((responseBody) => responseBody)\n      .catch((error) => error);\n  };\n\n  const getMovieDetail = (id) => {\n    const endpoint = `&i=${id}&plot=full`;\n    return instance\n      .get(`?apikey=faf7e5bb${endpoint}`)\n      .then((response) => response.data)\n      .then((responseBody) => responseBody)\n      .catch((error) => error);\n  };\n\n  return {\n    getMovies,\n    getMovieDetail,\n  };\n}\n\nexport default MoviesApi;\n","const styles = (theme) => ({\n  root: {\n    \"& .MuiTypography-overline\": {\n      fontSize: \"0.45rem\",\n    },\n  },\n  paperRoot: {\n    padding: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  movieDetailPaper: {\n    minHeight: \"80vh\",\n  },\n  movieDetailCard: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  cover: {\n    width: 151,\n  },\n  columnPaper: {\n    padding: `${theme.spacing(2)}px ${theme.spacing(1)}px`,\n    borderRadius: 0,\n    boxShadow: \"none\",\n  },\n});\n\nexport default styles\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  LinearProgress,\n  Paper,\n  Typography,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Divider\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\n\nimport { ArrowBackIos } from '@material-ui/icons';\nimport MoviesApi from \"../../api/movies\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from './style-jss'\n\nconst moviesApi = MoviesApi();\n\nconst MovieDetailPage = (props) => {\n  const { classes } = props\n  const movieId = props.match.params.id;\n\n  const [movieDetailState, setMovieDetailState] = useState({\n    fetchingMovie: true,\n    movieData: null,\n  });\n  \n  const { fetchingMovie, movieData } = movieDetailState\n\n  const fetchMovieDetail = useCallback(async () => {\n    await moviesApi.getMovieDetail(movieId)\n      .then(response => {\n        setMovieDetailState({\n          movieData: response,\n          fetchingMovie: false\n        })\n      })\n      .catch( error => error )\n    \n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieDetail();\n  }, [fetchMovieDetail]);\n\n\n  return (\n    <Container className={classes.root}>\n      <div style={{ paddingTop: 84 }}>\n        <AppBar position=\"fixed\">\n          <Container>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                component={Link}\n                to=\"/\"\n              >\n                <ArrowBackIos />\n              </IconButton>\n            </Toolbar>\n          </Container>\n        </AppBar>\n        <Paper elevation={1} square styles={{ padding: 10 }}>\n          {fetchingMovie ? (\n            <LinearProgress />\n          ) : (\n            <Grid container spacing={2}>\n              <Grid item xs={6} sm={3}>\n                <Paper className={classes.columnPaper}>\n                  <img\n                    src={movieData.Poster}\n                    alt={movieData.Title}\n                    style={{ width: \"100%\" }}\n                  />\n                </Paper>\n              </Grid>\n              <Grid item xs={6} sm={3}>\n                <Paper\n                  className={classes.columnPaper}\n                  style={{ paddingLeft: 0 }}\n                >\n                  <Typography variant=\"overline\" display=\"block\">\n                    IMDB ID\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    {movieData.imdbID}\n                  </Typography>\n                  <Divider />\n                  <Typography variant=\"overline\" display=\"block\">\n                    IMDB Rating\n                  </Typography>\n                  <Rating\n                    name=\"size-small\"\n                    defaultValue={parseInt(movieData.imdbRating) / 2}\n                    precision={0.5}\n                    size=\"small\"\n                    readOnly\n                  />\n                  <Divider />\n                  <Typography variant=\"overline\" display=\"block\">\n                    IMDB Votes\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    {movieData.imdbVotes}\n                  </Typography>\n                  <Divider />\n                  <Typography variant=\"overline\" display=\"block\">\n                    Meta Score\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                    {movieData.Metascore}\n                  </Typography>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Paper className={classes.columnPaper}>\n                  <Typography variant=\"h4\" gutterBottom>\n                    {movieData.Title}\n                  </Typography>\n                  <Typography variant=\"h6\" gutterBottom color=\"textSecondary\">\n                    ({movieData.Year}) | {movieData.Country}\n                  </Typography>\n                  <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    {movieData.Type} | {movieData.Runtime} | {movieData.Genre} |{\" \"}\n                    {movieData.Released}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    gutterBottom\n                    color=\"textSecondary\"\n                  >\n                    {movieData.Plot}\n                  </Typography>\n                  <List dense style={{ padding: 0 }}>\n                    <ListItem disableGutters>\n                      <ListItemText\n                        primary={\"Directors\"}\n                        secondary={movieData.Director}\n                      />\n                    </ListItem>\n                    <ListItem disableGutters>\n                      <ListItemText\n                        primary={\"Writers\"}\n                        secondary={movieData.Writer}\n                      />\n                    </ListItem>\n                    <ListItem disableGutters>\n                      <ListItemText\n                        primary={\"Actors\"}\n                        secondary={movieData.Actors}\n                      />\n                    </ListItem>\n                  </List>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n        </Paper>\n      </div>\n    </Container>\n  );\n};\n\nMovieDetailPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  maxWidth: PropTypes.oneOf([\"sm\", \"md\", \"lg\", \"xl\"]),\n};\n\nMovieDetailPage.defaultProps = {\n  maxWidth: \"lg\",\n};\nexport default withStyles(styles)(MovieDetailPage);\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport './base.scss';\n\nimport { MoviesPage, MovieDetailPage } from './containers'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={MoviesPage} />\n      <Route path=\"/movies/:id\" exact component={MovieDetailPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","export const getKeyword = (state) => state.movies.keyword;\n","import { takeEvery, call, fork, put, select } from \"redux-saga/effects\";\nimport * as actions from \"../../actions/movies\";\nimport MoviesApi from \"../../../api/movies\";\n\nimport { getKeyword } from '../../selectors'\n\nconst moviesApi = MoviesApi();\n\nfunction* fetchMovies() {\n  const keyword = yield select(getKeyword)\n  const response = yield call(moviesApi.getMovies, { params: keyword });\n  \n  try {\n    yield put(actions.getMoviesSuccess({ movies: response.Search }));\n  } catch (error) {\n    yield put(actions.getMoviesFailed(response.Error));\n  }\n}\nfunction* watchFetchMovies() {\n  yield takeEvery(actions.Types.GET_MOVIES_REQUEST, fetchMovies);\n}\n\nconst MoviesSagas = [\n  fork(watchFetchMovies),\n];\n\nexport default MoviesSagas;\n","import { all } from \"redux-saga/effects\";\nimport { MoviesSagas } from \"./sagas/index\";\n\n// combine all sagas\nexport default function* rootSaga() {\n  yield all([...MoviesSagas]);\n}\n","import { Types } from \"../../actions/movies\";\n\nconst INITIAL_STATE = {\n  fetchingMovies: false,\n  error: null,\n  data: [],\n  keyword: '',\n};\n\nexport default function MoviesReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.GET_MOVIES_SUCCESS: {\n      return {\n        ...state,\n        data: [...action.payload.movies],\n        error: null,\n        fetchingMovies: false,\n      };\n    }\n    case Types.GET_MOVIES_REQUEST: {\n      return {\n        ...state,\n        keyword: action.payload.keyword,\n        fetchingMovies: true,\n      };\n    }\n    case Types.GET_MOVIES_FAILED: {\n      return {\n        error: action.payload.error,\n        fetchingMovies: false,\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  MoviesReducer\n} from \"./reducers\";\n\nexport default combineReducers({\n  movies: MoviesReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSagas from \"./rootSagas\";\nimport rootReducers from \"./rootReducers\";\n\nlet composeEnhancers = compose;\nif (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\n// connect sagas\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [ sagaMiddleware ]\nconst enhancers = [applyMiddleware(...middlewares)];\n\n// pass data from reducers/index into store\nconst store = createStore(\n  rootReducers,\n  composeEnhancers(...enhancers)\n);\nsagaMiddleware.run(rootSagas);\n\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Router, Route } from \"react-router-dom\";\nimport history from \"./utils/history\";\nimport { Provider } from \"react-redux\";\nimport store from \"./stores\";\n\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <Route component={App} />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}